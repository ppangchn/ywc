{"ast":null,"code":"import _regeneratorRuntime from \"/Users/taptap432/Desktop/ywc/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/taptap432/Desktop/ywc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/taptap432/Desktop/ywc/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/taptap432/Desktop/ywc/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/taptap432/Desktop/ywc/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/taptap432/Desktop/ywc/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/taptap432/Desktop/ywc/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/taptap432/Desktop/ywc/src/pages/Weather/Weather.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport config from '../../config';\nimport { Container, Row, Col, Button } from 'reactstrap';\nimport Select from 'react-select';\nimport WeatherData from './WeatherData';\nimport WeatherChart from './WeatherChart';\nimport moment from 'moment';\nimport '../../css/Weather.css';\nvar cityOptions = [{\n  value: 'Krung Thep Mahanakhon',\n  label: 'กรุงเทพมหานคร'\n}, {\n  value: 'Changwat Samut Prakan',\n  label: 'สมุทรปราการ'\n}, {\n  value: 'Changwat Nonthaburi',\n  label: 'นนทบุรี'\n}, {\n  value: 'Changwat Kanchanaburi',\n  label: 'กาญจนบุรี'\n}, {\n  value: 'Changwat Prachin Buri',\n  label: 'ปราจีนบุรี'\n}, {\n  value: 'Changwat Nakhon Ratchasima',\n  label: 'นครราชสีมา'\n}, {\n  value: 'Changwat Nakhon Sawan',\n  label: 'นครสวรรค์'\n}, {\n  value: 'Changwat Maha Sarakham',\n  label: 'มหาสารคาม'\n}, {\n  value: 'Changwat Phetchaburi',\n  label: 'เพชรบุรี'\n}, {\n  value: 'Changwat Chon Buri',\n  label: 'ชลบุรี'\n}, {\n  value: 'Changwat Samut Sakhon',\n  label: 'สมุทรสาคร'\n}, {\n  value: 'Changwat Ubon Ratchathani',\n  label: 'อุบลราชธานี'\n}, {\n  value: 'Changwat Uttaradit',\n  label: 'อุตรดิตถ์'\n}, {\n  value: 'Changwat Ratchaburi',\n  label: 'ราชบุรี'\n}, {\n  value: 'Changwat Nakhon Nayok',\n  label: 'นครนายก'\n}, {\n  value: 'Changwat Mukdahan',\n  label: 'มุกดาหาร'\n}, {\n  value: 'Changwat Surat Thani',\n  label: 'สุราษฎร์ธานี'\n}, {\n  value: 'Changwat Phra Nakhon Si Ayutthaya',\n  label: 'พระนครศรีอยุธยา'\n}, {\n  value: 'Changwat Songkhla',\n  label: 'สงขลา'\n}, {\n  value: 'Changwat Trang',\n  label: 'ตรัง'\n}, {\n  value: 'Changwat Yala',\n  label: 'ยะลา'\n}, {\n  value: 'Changwat Ranong',\n  label: 'ระนอง'\n}, {\n  value: 'Changwat Pattani',\n  label: 'ปัตตานี'\n}, {\n  value: 'Changwat Surin',\n  label: 'สุรินทร์'\n}, {\n  value: 'Changwat Nan',\n  label: 'น่าน'\n}, {\n  value: 'Changwat Lamphun',\n  label: 'ลำพูน'\n}, {\n  value: 'Changwat Roi Et',\n  label: 'ร้อยเอ็ด'\n}, {\n  value: 'Changwat Buriram',\n  label: 'บุรีรัมย์'\n}, {\n  value: 'Changwat Loei',\n  label: 'เลย'\n}];\nvar dateOptions = [{\n  value: moment().format('DD MMMM YYYY'),\n  label: 'Today'\n}, {\n  value: moment().add(1, 'days').format('DD MMMM YYYY'),\n  label: moment().add(1, 'days').format('DD MMMM YYYY')\n}, {\n  value: moment().add(2, 'days').format('DD MMMM YYYY'),\n  label: moment().add(2, 'days').format('DD MMMM YYYY')\n}, {\n  value: moment().add(3, 'days').format('DD MMMM YYYY'),\n  label: moment().add(3, 'days').format('DD MMMM YYYY')\n}, {\n  value: moment().add(4, 'days').format('DD MMMM YYYY'),\n  label: moment().add(4, 'days').format('DD MMMM YYYY')\n}];\n\nvar Weather =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Weather, _Component);\n\n  function Weather() {\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Weather).call(this));\n    _this.state = {\n      data: [],\n      cityList: ['Krung Thep Mahanakhon', 'Changwat Samut Prakan', 'Changwat Nonthaburi', 'Changwat Kanchanaburi', 'Changwat Prachin Buri', 'Changwat Nakhon Ratchasima', 'Changwat Nakhon Sawan', 'Changwat Maha Sarakham', 'Changwat Phetchaburi', 'Changwat Chon Buri', 'Changwat Samut Sakhon', 'Changwat Ubon Ratchathani', 'Changwat Uttaradit', 'Changwat Ratchaburi', 'Changwat Nakhon Pathom', 'Changwat Nakhon Nayok', 'Changwat Mukdahan', 'Changwat Surat Thani', 'Changwat Phra Nakhon Si Ayutthaya', 'Changwat Songkhla', 'Changwat Trang', 'Changwat Yala', 'Changwat Ranong', 'Changwat Pattani', 'Changwat Surin', 'Changwat Nan', 'Changwat Lamphun', 'Changwat Roi Et', 'Changwat Buriram', 'Changwat Loei'],\n      showedData: {},\n      selectedCity: '',\n      storedDataId: [],\n      isShowed: false,\n      selectedDate: '',\n      date: '',\n      city: '',\n      invalidCity: false,\n      invalidDate: true\n    };\n    return _this;\n  }\n\n  _createClass(Weather, [{\n    key: \"handleCityChange\",\n    value: function handleCityChange(selectedCity) {\n      console.log('selectedCity', selectedCity);\n      this.setState({\n        selectedCity: selectedCity\n      });\n    }\n  }, {\n    key: \"handleDateChange\",\n    value: function handleDateChange(selectedDate) {\n      console.log('selectedDate', selectedDate);\n      this.setState({\n        selectedDate: selectedDate\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function () {\n      var _getData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(selectedCity) {\n        var _this2 = this;\n\n        var _this$state, cityList, storedDataId, data, selectedDate, id, showedData;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = this.state, cityList = _this$state.cityList, storedDataId = _this$state.storedDataId, data = _this$state.data, selectedDate = _this$state.selectedDate;\n                id = cityList.indexOf(selectedCity.value);\n\n                if (!(storedDataId.indexOf(id) === -1)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 5;\n                return axios.get(\"\".concat(config.url, \"?q=\").concat(cityList[id], \",TH&APPID=\").concat(config.key)).then(function (res) {\n                  var citydata = res.data;\n                  citydata['id'] = id;\n                  data.push(citydata);\n                  storedDataId.push(id);\n\n                  _this2.setState({\n                    data: data,\n                    showedData: citydata\n                  });\n                });\n\n              case 5:\n                _context.next = 12;\n                break;\n\n              case 7:\n                showedData = data.filter(function (e) {\n                  if (e.id === id) return e;\n                });\n                console.log('data', data);\n                console.log('showedData', showedData);\n                showedData = showedData[0];\n                this.setState({\n                  showedData: showedData\n                });\n\n              case 12:\n                this.setState({\n                  isShowed: true,\n                  date: selectedDate.value,\n                  city: selectedCity.label\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getData(_x) {\n        return _getData.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          selectedCity = _this$state2.selectedCity,\n          showedData = _this$state2.showedData,\n          isShowed = _this$state2.isShowed,\n          selectedDate = _this$state2.selectedDate,\n          date = _this$state2.date,\n          city = _this$state2.city;\n      return React.createElement(Container, {\n        style: {\n          marginTop: '80px',\n          color: 'rgb(0,25,108',\n          marginLeft: '50px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"http://www.puppylandla.com/images/wallpaper-light-blue.png\",\n        className: \"bg\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(Row, {\n        style: {\n          border: '1px solid #DEDEDE'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Col, {\n        className: \"weather-forecast-title\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Weather Forecast\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Please Select City\", React.createElement(Select, {\n        classNamePrefix: \"select-city\",\n        onChange: function onChange(e) {\n          return _this3.handleCityChange(e);\n        },\n        value: selectedCity,\n        options: cityOptions,\n        placeholder: \"select city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Choose Date\", React.createElement(Select, {\n        classNamePrefix: \"select-city\",\n        onChange: function onChange(e) {\n          return _this3.handleDateChange(e);\n        },\n        value: selectedDate,\n        options: dateOptions,\n        isSearchable: false,\n        placeholder: \"select date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      })), React.createElement(Col, {\n        style: {\n          alignSelf: 'flex-end'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"blue\",\n        onClick: function onClick() {\n          return _this3.getData(selectedCity);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Go\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, isShowed && React.createElement(\"div\", {\n        className: \"province-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), city, React.createElement(WeatherData, {\n        data: showedData,\n        selectedDate: date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(WeatherChart, {\n        data: showedData,\n        selectedDate: date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Weather;\n}(Component);\n\nexport default Weather;","map":{"version":3,"sources":["/Users/taptap432/Desktop/ywc/src/pages/Weather/Weather.js"],"names":["React","Component","axios","config","Container","Row","Col","Button","Select","WeatherData","WeatherChart","moment","cityOptions","value","label","dateOptions","format","add","Weather","state","data","cityList","showedData","selectedCity","storedDataId","isShowed","selectedDate","date","city","invalidCity","invalidDate","console","log","setState","id","indexOf","get","url","key","then","res","citydata","push","filter","e","marginTop","color","marginLeft","border","handleCityChange","handleDateChange","alignSelf","getData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport config from '../../config'\nimport { Container, Row, Col, Button } from 'reactstrap'\nimport Select from 'react-select'\nimport WeatherData from './WeatherData'\nimport WeatherChart from './WeatherChart'\nimport moment from 'moment'\nimport '../../css/Weather.css'\n\nconst cityOptions = [\n  { value: 'Krung Thep Mahanakhon', label: 'กรุงเทพมหานคร' },\n  { value: 'Changwat Samut Prakan', label: 'สมุทรปราการ' },\n  { value: 'Changwat Nonthaburi', label: 'นนทบุรี' },\n  { value: 'Changwat Kanchanaburi', label: 'กาญจนบุรี' },\n  { value: 'Changwat Prachin Buri', label: 'ปราจีนบุรี' },\n  { value: 'Changwat Nakhon Ratchasima', label: 'นครราชสีมา' },\n  { value: 'Changwat Nakhon Sawan', label: 'นครสวรรค์' },\n  { value: 'Changwat Maha Sarakham', label: 'มหาสารคาม' },\n  { value: 'Changwat Phetchaburi', label: 'เพชรบุรี' },\n  { value: 'Changwat Chon Buri', label: 'ชลบุรี' },\n  { value: 'Changwat Samut Sakhon', label: 'สมุทรสาคร' },\n  { value: 'Changwat Ubon Ratchathani', label: 'อุบลราชธานี' },\n  { value: 'Changwat Uttaradit', label: 'อุตรดิตถ์' },\n  { value: 'Changwat Ratchaburi', label: 'ราชบุรี' },\n  { value: 'Changwat Nakhon Nayok', label: 'นครนายก' },\n  { value: 'Changwat Mukdahan', label: 'มุกดาหาร' },\n  { value: 'Changwat Surat Thani', label: 'สุราษฎร์ธานี' },\n  { value: 'Changwat Phra Nakhon Si Ayutthaya', label: 'พระนครศรีอยุธยา' },\n  { value: 'Changwat Songkhla', label: 'สงขลา' },\n  { value: 'Changwat Trang', label: 'ตรัง' },\n  { value: 'Changwat Yala', label: 'ยะลา' },\n  { value: 'Changwat Ranong', label: 'ระนอง' },\n  { value: 'Changwat Pattani', label: 'ปัตตานี' },\n  { value: 'Changwat Surin', label: 'สุรินทร์' },\n  { value: 'Changwat Nan', label: 'น่าน' },\n  { value: 'Changwat Lamphun', label: 'ลำพูน' },\n  { value: 'Changwat Roi Et', label: 'ร้อยเอ็ด' },\n  { value: 'Changwat Buriram', label: 'บุรีรัมย์' },\n  { value: 'Changwat Loei', label: 'เลย' },\n]\nconst dateOptions = [\n  {\n    value: moment().format('DD MMMM YYYY'),\n    label: 'Today'\n  },\n  {\n    value: moment()\n      .add(1, 'days')\n      .format('DD MMMM YYYY'),\n    label: moment()\n      .add(1, 'days')\n      .format('DD MMMM YYYY')\n  },\n  {\n    value: moment()\n      .add(2, 'days')\n      .format('DD MMMM YYYY'),\n    label: moment()\n      .add(2, 'days')\n      .format('DD MMMM YYYY')\n  },\n  {\n    value: moment()\n      .add(3, 'days')\n      .format('DD MMMM YYYY'),\n    label: moment()\n      .add(3, 'days')\n      .format('DD MMMM YYYY')\n  },\n  {\n    value: moment()\n      .add(4, 'days')\n      .format('DD MMMM YYYY'),\n    label: moment()\n      .add(4, 'days')\n      .format('DD MMMM YYYY')\n  }\n]\nclass Weather extends Component {\n  constructor() {\n    super()\n    this.state = {\n      data: [],\n      cityList: [\n        'Krung Thep Mahanakhon',\n        'Changwat Samut Prakan',\n        'Changwat Nonthaburi',\n        'Changwat Kanchanaburi',\n        'Changwat Prachin Buri',\n        'Changwat Nakhon Ratchasima',\n        'Changwat Nakhon Sawan',\n        'Changwat Maha Sarakham',\n        'Changwat Phetchaburi',\n        'Changwat Chon Buri',\n        'Changwat Samut Sakhon',\n        'Changwat Ubon Ratchathani',\n        'Changwat Uttaradit',\n        'Changwat Ratchaburi',\n        'Changwat Nakhon Pathom',\n        'Changwat Nakhon Nayok',\n        'Changwat Mukdahan',\n        'Changwat Surat Thani',\n        'Changwat Phra Nakhon Si Ayutthaya',\n        'Changwat Songkhla',\n        'Changwat Trang',\n        'Changwat Yala',\n        'Changwat Ranong',\n        'Changwat Pattani',\n        'Changwat Surin',\n        'Changwat Nan',\n        'Changwat Lamphun',\n        'Changwat Roi Et',\n        'Changwat Buriram',\n        'Changwat Loei',\n      ],\n      showedData: {},\n      selectedCity: '',\n      storedDataId: [],\n      isShowed: false,\n      selectedDate: '',\n      date: '',\n      city: '',\n      invalidCity: false,\n      invalidDate: true\n    }\n  }\n  handleCityChange(selectedCity) {\n    console.log('selectedCity', selectedCity)\n    this.setState({ selectedCity })\n  }\n  handleDateChange(selectedDate) {\n    console.log('selectedDate', selectedDate)\n    this.setState({ selectedDate })\n  }\n  async getData(selectedCity) {\n    const { cityList, storedDataId, data, selectedDate } = this.state\n    const id = cityList.indexOf(selectedCity.value)\n    if (storedDataId.indexOf(id) === -1) {\n      await axios\n        .get(`${config.url}?q=${cityList[id]},TH&APPID=${config.key}`)\n        .then(res => {\n          const citydata = res.data\n          citydata['id'] = id\n          data.push(citydata)\n          storedDataId.push(id)\n          this.setState({ data, showedData: citydata })\n        })\n    } else {\n      let showedData = data.filter(e => {\n        if (e.id === id) return e\n      })\n      console.log('data', data)\n      console.log('showedData', showedData)\n      showedData = showedData[0]\n      this.setState({ showedData })\n    }\n    this.setState({\n      isShowed: true,\n      date: selectedDate.value,\n      city: selectedCity.label\n    })\n  }\n  render() {\n    const {\n      selectedCity,\n      showedData,\n      isShowed,\n      selectedDate,\n      date,\n      city\n    } = this.state\n    return (\n      <Container style={{ marginTop: '80px', color: 'rgb(0,25,108' ,marginLeft:'50px' }}>\n        <img\n          src=\"http://www.puppylandla.com/images/wallpaper-light-blue.png\"\n          className=\"bg\"\n          alt=\"\"\n        />\n        <Row style={{ border: '1px solid #DEDEDE' }}>\n          <Col className=\"weather-forecast-title\" fluid={true}>\n            Weather Forecast\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            Please Select City\n            <Select\n              classNamePrefix=\"select-city\"\n              onChange={e => this.handleCityChange(e)}\n              value={selectedCity}\n              options={cityOptions}\n              placeholder=\"select city\"\n            />\n          </Col>\n          <Col>\n            Choose Date\n            <Select\n              classNamePrefix=\"select-city\"\n              onChange={e => this.handleDateChange(e)}\n              value={selectedDate}\n              options={dateOptions}\n              isSearchable={false}\n              placeholder=\"select date\"\n            />\n          </Col>\n          <Col style={{ alignSelf: 'flex-end' }}>\n            <Button color=\"blue\" onClick={() => this.getData(selectedCity)}>\n              Go\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {isShowed && (\n              <div className=\"province-name\">\n                <br />\n                {city}\n                <WeatherData data={showedData} selectedDate={date} /><br />\n                <WeatherChart data={showedData} selectedDate={date} />\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n}\n\nexport default Weather\n"]},"metadata":{},"sourceType":"module"}